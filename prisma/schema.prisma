// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// npx prisma studio

// 1. Create migration
// ex: npx prisma migrate diff --from-empty --to-schema-datamodel prisma/schema.prisma --script > prisma/migrations/12132023/migration.sql
// 2. Apply migration
// ex: npx prisma migrate resolve --applied 12132023
// 3. Push (skip to here if prototyping)
// ex: npx prisma db push && npm i

datasource db {
    provider     = "mysql"
    url          = env("DATABASE_URL")
    relationMode = "prisma"
}

generator client {
    provider = "prisma-client-js"
}

model InventoryItem {
    id           String             @id @default(cuid())
    createdAt    DateTime           @default(now())
    createdBy    String
    label        String             @default("Unlabeled Inventory Item") @db.VarChar(255)
    sellingPrice Int                @default(0)
    transactions TransactionItems[]

    // concession items
    isConcessionItem Boolean @default(false)
    purchasePrice    Int?
    inStock          Int?    @default(0)

    // admisison items
    isAdmissionItem Boolean  @default(false)
    isSeasonal      Boolean?
    isDay           Boolean?
    patronLimit     Int?
}

model SeasonPass {
    id        String   @id @default(cuid())
    createdAt DateTime @default(now())
    createdBy String
    patrons   Patron[]

    label              String    @default("Unlabeled Season Pass") @db.VarChar(255)
    effectiveStartDate DateTime  @default(now())
    effectiveEndDate   DateTime?
}

model Patron {
    id         String           @id @default(cuid())
    createdAt  DateTime         @default(now())
    createdBy  String
    pass       SeasonPass       @relation(fields: [passId], references: [id])
    passId     String
    admissions AdmissionEvent[]

    firstName      String
    lastName       String
    birthDate      DateTime?
    banReEntryDate DateTime?

    @@index([passId])
}

model Transaction {
    id        String             @id @default(cuid())
    createdAt DateTime           @default(now())
    createdBy String
    items     TransactionItems[]
}

model TransactionItems {
    transaction   Transaction   @relation(fields: [transactionId], references: [id])
    transactionId String
    item          InventoryItem @relation(fields: [itemId], references: [id])
    itemId        String
    createdAt     DateTime      @default(now())
    createdBy     String
    amountSold    Int           @default(1)

    @@id([transactionId, itemId])
    @@index([transactionId])
    @@index([itemId])
}

model AdmissionEvent {
    id        String   @id @default(cuid())
    patronId  String
    patron    Patron   @relation(fields: [patronId], references: [id])
    createdAt DateTime @default(now())
    createdBy String

    @@index([patronId])
}

model Shift {
    id     String   @id @default(cuid())
    userId String
    start  DateTime
    end    DateTime

    createdBy String
    createdAt DateTime @default(now())
}

model Feedback {
    id        String   @id @default(cuid())
    message   String
    createdBy String
    createdAt DateTime @default(now())
}

model HourCode {
    id              String           @id @default(cuid())
    label           String
    hourlyRate      Int
    timeclockEvents TimeClockEvent[]
    userSettings    UserSettings[]

    createdBy String
    createdAt DateTime @default(now())
}

model TimeClockEvent {
    id         String   @id @default(cuid())
    userId     String
    hourCodeId String
    hourCode   HourCode @relation(fields: [hourCodeId], references: [id])
    createdBy  String
    createdAt  DateTime @default(now())

    @@index([hourCodeId])
}

model UserSettings {
    id                String    @id @default(cuid())
    userId            String    @unique
    defaultHourCodeId String?
    defaultHourCode   HourCode? @relation(fields: [defaultHourCodeId], references: [id])
    canModifyHourCode Boolean   @default(false)
    clockPIN          String?   @unique
    isAdmin           Boolean   @default(false)
    canSchedule       Boolean   @default(false)

    createdBy String
    createdAt DateTime @default(now())

    @@index([defaultHourCodeId])
}
